/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: yelaman.arts (https://sketchfab.com/elamanbolushan)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/loading-animation-fe9d25c88165462582454f85fad69e81
Title: Loading animation
*/

import React, { useRef, useEffect } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'

// Props:
// - duration (seconds): sets how long one loop of the animation should take
// - speed: multiplier for playback speed (e.g., 0.5 is slower, 2 is faster)
function LoadingModel({ duration, speed, ...props }) {
  const group = useRef()
  const { nodes, materials, animations } = useGLTF('/models/loading.glb')
  const { actions } = useAnimations(animations, group)

  // Play all available animation clips when the component mounts
  useEffect(() => {
    if (!actions) return
    Object.values(actions).forEach((action) => {
      if (!action) return
      action.reset()
      if (typeof duration === 'number' && !Number.isNaN(duration)) {
        action.setDuration(duration)
      }
      if (typeof speed === 'number' && !Number.isNaN(speed)) {
        action.setEffectiveTimeScale(speed)
      }
      action.play()
    })
    return () => {
      Object.values(actions).forEach((action) => action?.stop())
    }
  }, [actions, duration, speed])

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Sketchfab_Scene">
        <group name="Sketchfab_model" position={[-1.477, -0.292, -0.286]} rotation={[-0.021, 0, 0]}>
          <group name="Root">
            <group name="Text" scale={1.1}>
              <mesh
                name="Text_0"
                castShadow
                receiveShadow
                geometry={nodes.Text_0.geometry}
                material={materials.blue}
              />
            </group>
            <group name="Text001" position={[1.477, 0.243, 0.017]}>
              <mesh
                name="Text001_0"
                castShadow
                receiveShadow
                geometry={nodes.Text001_0.geometry}
                material={materials.blue}
              />
            </group>
            <group name="Text002" position={[1.477, 0.243, 0.017]}>
              <mesh
                name="Text002_0"
                castShadow
                receiveShadow
                geometry={nodes.Text002_0.geometry}
                material={materials.blue}
              />
            </group>
            <group name="Text003" position={[1.477, 0.243, 0.017]}>
              <mesh
                name="Text003_0"
                castShadow
                receiveShadow
                geometry={nodes.Text003_0.geometry}
                material={materials.blue}
              />
            </group>
          </group>
        </group>
      </group>
    </group>
  )
}

export default LoadingModel;

useGLTF.preload('/models/loading.glb')
